int _getIntesectionNode(int d, Node* head1, Node* head2) 
{ 
    // Stand at the starting of the bigger list 
    Node* current1 = head1; 
    Node* current2 = head2; 
  
    // Move the pointer forward 
    for (int i = 0; i < d; i++) { 
        if (current1 == NULL) { 
            return -1; 
        } 
        current1 = current1->next; 
    } 
  
    // Move both pointers of both list till they 
    // intersect with each other 
    while (current1 != NULL && current2 != NULL) { 
        if (current1 == current2) 
            return current1->data; 
  
        // Move both the pointers forward 
        current1 = current1->next; 
        current2 = current2->next; 
    } 
  
    return -1; 
} 
  
/* Takes head pointer of the linked list and  
returns the count of nodes in the list */
int getCount(Node* head) 
{ 
    Node* current = head; 
  
    // Counter to store count of nodes 
    int count = 0; 
  
    // Iterate till NULL 
    while (current != NULL) { 
  
        // Increase the counter 
        count++; 
  
        // Move the Node ahead 
        current = current->next; 
    } 
  
    return count; 
} 